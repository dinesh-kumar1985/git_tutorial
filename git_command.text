Clone: Cloning a repository on our local machine.
git clone <repository url>

Status: Display the state of the code.
git Status

untracked:New file that git dose not yet track.

modified: Changed

Staged: File is ready to be committed.

unmodified : Unchanged

add: Add new or changes file in your working directory to the git staging area.\
git add <filename>

commit: it is record of change.

git commit -m "type message"

Push: Upload local repo content to remote repo.

git push origin main

git branch

- To check branch

git branch -M main 
-To rename branch name

git checkout <branchname>
- TO switch branch

git checkout -b <new branch name>

- To create new branch

git branch -d <branch name>

- To remove branch

Merging Code:

Method 1:

git diff <branch name>
-To compare commits, branches,files& more

git merge <branch name>
-To merge 2 branches

Way2:
Create a PR



These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   git clone "remort git repo url"

   init      Create an empty Git repository or reinitialize an existing one  

   git init 

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   git add "file name", git add .A,

   mv        Move or rename a file, a directory, or a symlink

   restore   Restore working tree files
   git restore

   rm        Remove files from the working tree and from the index


examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches 
   git checkout -b greet
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

   Hello